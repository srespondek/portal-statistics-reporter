[tox]
# if there is no setup.py
skipsdist=True
envlist = py38

pylint_opts = --disable=C tests
coverage_source = {toxinidir}/src/
tests_dir = {toxinidir}/tests/

[testenv]
basepython = python3.8
recreate=True

sitepackages = True

deps =
    -r{toxinidir}/src/requirements.txt
    coverage
    pylint
    pytest
    flake8

setenv =
    PYTHONPATH = {toxinidir}/tests/:{toxinidir}/src/
    ENABLE_DEBUG_LOGGING=False

commands = 
    mkdir -p '{toxinidir}/build'
    bash -c "rm -f '{toxinidir}/build/*{envname}*.log'"
    bash -c "rm -f '{toxinidir}/build/*{envname}*.xml'"

    bash -c "flake8 --max-complexity=15 --max-line-length=120 \
    --exclude=lib,.tox,build | tee build/flake8_{envname}.log || :"

    bash -c "pylint --output-format=parseable --reports=y --max-line-length=120 \
        {[tox]pylint_opts} > build/pylint_{envname}.log 2> /dev/null || :"
    bash -c "grep rated build/pylint_{envname}.log || :"

    coverage erase
    # run tests by py.test, write result to xml for CI servers
    coverage run --source {[tox]coverage_source} -m pytest \
        --junit-xml ./build/tests_{envname}.xml --junit-prefix {envname} {[tox]tests_dir}
    
    # coverage report for CI servers
    coverage xml -o "{toxinidir}/build/coverage_{envname}.xml"
    coverage html -d "{toxinidir}/build/html" 
    # report for command line interface
    coverage report
    
whitelist_externals =
    mkdir
    bash
    echo
    touch
